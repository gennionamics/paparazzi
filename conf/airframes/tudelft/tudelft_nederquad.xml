
<!DOCTYPE airframe SYSTEM "../airframe.dtd">

<!-- this is a quadrotor frame equiped with
* Autopilot:   Pixracer
* IMU:         MPU 9250 & MS5611
* Actuators:   PWM motor controllers
* GPS:
* RC:          Spektrum
-->
<airframe name="splash">
  <description>Pixracer
  </description>
  <firmware name="rotorcraft">
    <target name="ap" board="px4fmu_5.0_chibios" />
    <define name="BAT_CHECKER_DELAY" value="80" />
    <!-- amount of time it take for the bat to check -->
    <!-- to avoid bat low spike detection when strong pullup withch draws short sudden power-->
    <define name="CATASTROPHIC_BATTERY_KILL_DELAY" value="80" />
    <!-- in seconds-->
       <!-- Note that PERIODIC_FREQUENCY should be least equal or greater than AHRS_PROPAGATE_FREQUENCY -->
      <configure name="PERIODIC_FREQUENCY" value="2048"/> <!--  unit="Hz" -->

      <!-- Not enabled ATM default should be good -->
      <!--<define name="MPU9250_GYRO_RANGE" value="MPU60X0_GYRO_RANGE_2000"/>
      <define name="MPU9250_ACCEL_RANGE" value="MPU60X0_ACCEL_RANGE_16G"/>
      <define name="MPU9250_LOWPASS_FILTER" value="MPU60X0_DLPF_256HZ"/>
      <define name="MPU9250_SMPLRT_DIV" value="3"/>-->

      <configure name="AHRS_PROPAGATE_FREQUENCY" value="2000"/><!--  unit="Hz" -->
      <configure name="AHRS_CORRECT_FREQUENCY" value="2000"/> <!--  unit="Hz" -->
      <configure name="AHRS_MAG_CORRECT_FREQUENCY" value="50"/><!-- best value unit="Hz" for ACTIVE magneto -->

      <configure name="NAVIGATION_FREQUENCY" value="16"/> <!--  unit="Hz" -->
      <configure name="CONTROL_FREQUENCY" value="120"/> <!--  unit="Hz" -->
      <!--<configure name="TELEMETRY_FREQUENCY" value="60"/--> <!--  unit="Hz" -->
      <configure name="MODULES_FREQUENCY" value="2048"/> <!--  unit="Hz" -->
    <module name="telemetry" type="transparent">
       <configure name="MODEM_PORT" value="UART3"/><!--  Telem2 on pixracer -->
       <configure name="MODEM_BAUD" value="B57600"/>
    </module>
    <!-- temp fix for geomag, normally only used for rotorcraft -->
    <define name="SENSOR_SYNC_SEND"/> <!-- TODO Disable after first 10 test flights temporary for debugging Baro -->
    <configure name="USE_BARO_BOARD" value="TRUE"/>
    <define name="USE_BARO_MEDIAN_FILTER"/>
       <define name="AHRS_TRIGGERED_ATTITUDE_LOOP"/>
    <define name="USE_AHRS_GPS_ACCELERATIONS" value="TRUE"/> <!-- forward acceleration compensation from GPS speed -->
    <define name="USE_MAGNETOMETER_ONGROUND" value="TRUE"/> <!--DEFINE only used if float_dcm Use magnetic compensation before takeoff only while GPS course not good -->
   <!-- If AHRS_MAG_CORRECT_FREQUENCY is set outside of target no need USE_MAGNETOMETER it is assumed TRUE -->
    <configure name="USE_MAGNETOMETER" value="TRUE"/><!-- should be as in USE the device-->
    
    <module name="imu" type="mpu9250_spi">
      <configure name="IMU_MPU9250_SPI_DEV" value="spi1"/>
      <configure name="IMU_MPU9250_SPI_SLAVE_IDX" value="SPI_SLAVE2"/>
      <define name="IMU_MPU9250_READ_MAG" value="TRUE"/>
      <!-- To be able to set AP IMU orientaion when AP is mounted rotated, body to IMU should also work -->
        <define name="IMU_MPU9250_CHAN_X" value="0"/>
        <define name="IMU_MPU9250_CHAN_Y" value="1"/>
        <define name="IMU_MPU9250_CHAN_Z" value="2"/>
        <define name="IMU_MPU9250_X_SIGN" value="-1"/>
        <define name="IMU_MPU9250_Y_SIGN" value="-1"/>
        <define name="IMU_MPU9250_Z_SIGN" value="+1"/>
    </module>
    
<module name="baro_ms5611_spi" >
      <configure name="MS5611_SPI_DEV" value="spi1"/>
      <configure name="MS5611_SLAVE_IDX" value="SPI_SLAVE3"/>
      <!--<define name="SENSOR_SYNC_SEND"/>-->
    </module>
    
    <module name="gps" type="ublox" >
      <configure name="GPS_BAUD" value="B57600"/>
    </module>
    <module name="gps" type="ubx_ucenter" />
    <module name="stabilization" type="int_quat" />
    <!--<module name="stabilization" type="rate_indi" />-->
  <module name="ahrs" type="float_cmpl_quat"> <!-- Compare e.g. float_dcm -->
      <!--<configure name="AHRS_USE_MAGNETOMETER" value="TRUE"/>--> <!-- as in USE it for values in the AHRS -->
      <configure name="AHRS_ALIGNER_LED" value="2"/><!-- Which color you want sir? ;) -->
      <define name="AHRS_MAG_UPDATE_ALL_AXES" value="FALSE"/> <!-- if TRUE with those high roll n pith angles magneto should be calibrated well or use UKF autocalib -->
      <!--<define name="AHRS_USE_GPS_HEADING" value="FALSE"/>--><!-- TRUE by default Use GPS course to update heading for time being,if FALSE data from magneto only -->
      <!--<define name="AHRS_GRAVITY_UPDATE_COORDINATED_TURN" value="TRUE"/>--> <!--Already TRUE by default Compensation of centrifugal force via GPS speed (to fly in circles with a fixedwing)"-->
      <define name="AHRS_GPS_SPEED_IN_NEGATIVE_Z_DIRECTION" value="FALSE"/> <!-- AHRS_GRAVITY_UPDATE_COORDINATED_TURN assumes the GPS speed is in the X axis direction. Quadshot, DelftaCopter and other hybrids can have the GPS speed in the negative Z direction" -->
      <!--<define name="AHRS_PROPAGATE_LOW_PASS_RATES" value="TRUE"/>--> <!-- apply a low pass filter on rotational velocity"-->
      <!--<define name="AHRS_BIAS_UPDATE_HEADING_THRESHOLD" value="0.174533"/>--><!--unit="rad"/--><!-- don't update gyro bias if heading deviation is above this rotation threshold"-->
      <define name="AHRS_HEADING_UPDATE_GPS_MIN_SPEED" value="3.0"/> <!--unit="m/s"--> <!-- CAREFULL,  Don't update heading from GPS course if GPS ground speed is below is this threshold in m/s" -->
      <!-- Some insights https://lists.nongnu.org/archive/html/paparazzi-devel/2013-10/msg00126.html -->
      <!--define name="AHRS_GRAVITY_HEURISTIC_FACTOR" value="0.0"/--> <!-- TODO: determine Default is 30.0 Reduce accelerometer cut-off frequency when the vehicle is accelerating: norm(ax,ay,az) 9,81 m/s2. WARNING: when the IMU is not well damped, the norm of accelerometers never equals to 9,81 m/s2. As a result, the GRAVITY_HEURISTIC_FACTOR will reduce the accelerometer bandwith even if the vehicle is not accelerating. -->
      <!--<define name="AHRS_FC_IMU_ID" value="ABI_BROADCAST"/>--> <!-- ABI sender id of IMU to use Change is you change your AHRS type -->
      <define name="AHRS_FC_MAG_ID" value="MAG_HMC58XX_SENDER_ID" /><!-- MAG_CALIB_UKF_ID for when using the mag_clib_ukf  change your AHRS type-->
        <!--<define name="AHRS_FC_MAG_ID" value="MAG_QMC5883_SENDER_ID" />--><!-- Use this insted of MAG_HMC5883_SENDER_ID for alternative sensor -->
    </module>
    <module name="ins" type="extended" />
    <module name="current_sensor">
      <configure name="ADC_CURRENT_SENSOR" value="ADC_3" />
    </module>
    <module name="actuators" type="pwm">
      <define name="SERVO_HZ" value="400" />
    </module>


    <module name="motor_mixing" />

      <!-- SBUS out is AETR by default, our transmitter sends TAER as per standard so correct in radio file -->
      <module name="radio_control" type="sbus"> <!-- The output type of RX, over the air it can can be all kinds e.g. DSMX, FRSky-->
        <!--<configure name="SBUS_PORT" value="UART5"/>--> <!-- Default used port is UART2  on FMU4 -->
        <!-- Mode set one a three way switch -->
        <!--  Per default already GEAR if not defined  <define name="RADIO_MODE" value="RADIO_GEAR"/> --><!-- yes, already done by default if not redefined to something else-->
        <define name="RADIO_KILL_SWITCH" value="RADIO_AUX1"/>
        <configure name="SBUS_PORT" value="UART2"/>
      </module>

  <module name="logger_sd_spi_direct.xml">
      <configure name="SDLOGGER_DIRECT_SPI" value="spi2"/>
      <configure name="SDLOGGER_DIRECT_SPI_SLAVE" value="SPI_SLAVE4"/>
      <configure name="SDLOGGER_DIRECT_CONTROL_SWITCH" value="RADIO_AUX2"/>
      <configure name="LOGGER_LED" value="3"/>
    </module>
    
    

    <module name="px4_flash"/>
    <module name="geo_mag" />
    <module name="air_data" />
    <module name="send_imu_mag_current" />
    <!--<module name="spektrum_soft_bind"/>-->



  <!-- For R14 a HMC5883 magneto on the main PCB, test if conflicts with other magneto -->
    <!--module name="mag" type="hmc58xx">
      <configure name="MAG_HMC58XX_I2C_DEV" value="i2c1"/>
      <define name="MODULE_HMC58XX_UPDATE_AHRS" value="TRUE"/>
    </module-->

    <!-- external mag for better heading estimate
    uses the magnetometor that is available on the GPS board
    Thi one is temperature compensated and furtherest away from all other devices
    so less influens (still to measure raw mag values to check this though )
    In case we where sloppy builing in the GPS+mag combo, ..we always are ;)
    we nead to compensate this a bit e.g. the pitch
    our luck at least the tree axis are aligned already in hardware :) -->
    <module name="mag" type="hmc58xx">
   <define name="MAG_TO_IMU_THETA" value="-50." unit="deg"/>
      <!--<define name="HMC58XX_STARTUP_DELAY" value="1.4"/>--><!-- If you mag somehow does not work, Enable this line, and maybe even change it to a higher value if it still does not work e.g. 1.9 -->
      <configure name="MAG_HMC58XX_I2C_DEV" value="i2c1"/>
      <!--<define name="MODULE_HMC58XX_SYNC_SEND" value="TRUE"/>--><!-- temporary for debugging external magneto and setup orientation sign and Body to Magneto angles-->
      <define name="MODULE_HMC58XX_UPDATE_AHRS" value="TRUE"/> <!-- When all calib and works to TRUE -->

      <define name="HMC58XX_CHAN_X" value="1"/>
      <define name="HMC58XX_CHAN_Y" value="0"/>
      <define name="HMC58XX_CHAN_Z" value="2"/>
      <define name="HMC58XX_CHAN_X_SIGN" value="+"/>
      <define name="HMC58XX_CHAN_Y_SIGN" value="-"/>
      <define name="HMC58XX_CHAN_Z_SIGN" value="+"/>
    </module>

    <!-- To get the signs (and channels) right, show a realtime plot scaled IMU_MAG mx, my, mz then:

    - [x] When you align your IMU with the direction of north, you should see x>0, y=~0, z>0.

    - [x] When pitching the IMU down, the magnetic vector is aligning with x,
          so x should increase and z should decrease to zero.

    - [x] If yawing your IMU to the left, the magnetic vector is aligning with y,
          so y should be positive and increase, x should decrease to zero and z stay positive.
-->
  </firmware>

  <section name="MISC">
    <!--define name="MilliAmpereOfAdc(adc)" value="((float)adc) * (3.3f / 4096.0f) * (90.0f / 5.0f)" /-->
    <!-- 100Amp = 2Volt -> 2482,42 tick/100Amp"(0.0402832*adc)" -->
  </section>
  <section name="IMU" prefix="IMU_">
    <!-- replace this with your own calibration -->
<!--     <define name="ACCEL_X_NEUTRAL" value="49"/>
    <define name="ACCEL_Y_NEUTRAL" value="6"/>
    <define name="ACCEL_Z_NEUTRAL" value="104"/>
    <define name="ACCEL_X_SENS" value="7.53390969897" integer="16"/>
    <define name="ACCEL_Y_SENS" value="7.35267287758" integer="16"/>
    <define name="ACCEL_Z_SENS" value="7.45488455799" integer="16"/> -->
    <define name="BODY_TO_IMU_PHI"   value="0." unit="deg"/>
    <define name="BODY_TO_IMU_THETA" value="50." unit="deg"/>
    <define name="BODY_TO_IMU_PSI"   value="0." unit="deg"/>

    <!--TODO: TMP OLD IRIS CALIBRATION -->
<define name="MAG_X_NEUTRAL" value="114"/>
<define name="MAG_Y_NEUTRAL" value="7"/>
<define name="MAG_Z_NEUTRAL" value="-16"/>
<define name="MAG_X_SENS" value="6.678820785155618" integer="16"/>
<define name="MAG_Y_SENS" value="6.11148616042521" integer="16"/>
<define name="MAG_Z_SENS" value="6.6402229695096375" integer="16"/>
  </section>
  <commands>
    <axis name="PITCH" failsafe_value="0" />
    <axis name="ROLL" failsafe_value="0" />
    <axis name="YAW" failsafe_value="0" />
    <axis name="THRUST" failsafe_value="0" />
  </commands>
  <rc_commands>
    <set command="THRUST" value="@THROTTLE" />
    <set command="ROLL" value="@ROLL" />
    <set command="PITCH" value="@PITCH" />
    <set command="YAW" value="@YAW" />
  </rc_commands>
  <servos driver="Default">
    <servo name="TOP_LEFT" no="3" min="1000" neutral="1100" max="2000" />
    <servo name="TOP_RIGHT" no="1" min="1000" neutral="1100" max="2000" />
    <servo name="BOTTOM_RIGHT" no="0" min="1000" neutral="1100" max="2000" />
    <servo name="BOTTOM_LEFT" no="2" min="1000" neutral="1100" max="2000" />
  </servos>
  <section name="MIXING" prefix="MOTOR_MIXING_">
    <define name="TRIM_ROLL" value="0" />
    <define name="TRIM_PITCH" value="0" />
    <define name="TRIM_YAW" value="0" />
    <define name="REVERSE" value="TRUE" />
    <define name="TYPE" value="QUAD_X" />
  </section>
  <command_laws>
    <call fun="motor_mixing_run(autopilot_get_motors_on(),FALSE,values)" />
    <set servo="TOP_LEFT" value="motor_mixing.commands[MOTOR_FRONT_LEFT]" />
    <set servo="TOP_RIGHT" value="motor_mixing.commands[MOTOR_FRONT_RIGHT]" />
    <set servo="BOTTOM_RIGHT" value="motor_mixing.commands[MOTOR_BACK_RIGHT]" />
    <set servo="BOTTOM_LEFT" value="motor_mixing.commands[MOTOR_BACK_LEFT]" />
  </command_laws>
  <section name="AIR_DATA" prefix="AIR_DATA_">
    <define name="CALC_AIRSPEED" value="FALSE" />
    <define name="CALC_TAS_FACTOR" value="FALSE" />
    <define name="CALC_AMSL_BARO" value="TRUE" />
  </section>
  <!-- local magnetic field -->
  <!-- http://wiki.paparazziuav.org/wiki/Subsystem/ahrs#Local_Magnetic_Field -->
  <section name="AHRS" prefix="AHRS_">
    <!-- values used if no GPS fix, on 3D fix is update by geo_mag module -->
    <!-- Delft -->
    <define name="H_X" value="0.3892503" />
    <define name="H_Y" value="0.0017972" />
    <define name="H_Z" value="0.9211303" />
    <!-- For vibrating airfames -->
    <define name="GRAVITY_HEURISTIC_FACTOR" value="0"/>
  </section>
  <section name="INS" prefix="INS_">
    <define name="SONAR_MAX_RANGE" value="2.2" />
    <define name="SONAR_UPDATE_ON_AGL" value="TRUE" />
  </section>
 
  
  <section name="STABILIZATION_ATTITUDE_INDI" prefix="STABILIZATION_INDI_">
    <!-- control effectiveness -->
    <define name="G1_P" value="0.02692" />
    <define name="G1_Q" value="0.025867" />
    <define name="G1_R" value="0.002055" />
    <define name="G2_R" value="0.15865" />
    <!-- For the bebop2 we need to filter the roll rate due to the dampers -->
    <define name="FILTER_ROLL_RATE" value="FALSE" />
    <define name="FILTER_PITCH_RATE" value="FALSE" />
    <define name="FILTER_YAW_RATE" value="FALSE" />
    <!-- reference acceleration for attitude control -->
    <define name="REF_ERR_P" value="100.0" />
    <define name="REF_ERR_Q" value="100.0" />
    <define name="REF_ERR_R" value="100.0" />
    <define name="REF_RATE_P" value="14.0" />
    <define name="REF_RATE_Q" value="14.0" />
    <define name="REF_RATE_R" value="14.0" />
    <!-- second order filter parameters -->
    <define name="FILT_CUTOFF" value="3.2"/>
    <define name="FILT_CUTOFF_R" value="3.2"/>
    <!-- first order actuator dynamics -->
    <define name="ACT_DYN_P" value="0.04" />
    <define name="ACT_DYN_Q" value="0.04" />
    <define name="ACT_DYN_R" value="0.04" />
    <!-- Adaptive Learning Rate -->
    <define name="USE_ADAPTIVE" value="FALSE" />
    <define name="ADAPTIVE_MU" value="0.0001" />
    <!-- max rates (conservative) -->
    <define name="STABILIZATION_INDI_MAX_RATE" value="343.77" unit="deg/s"/>
    <define name="STABILIZATION_INDI_MAX_R" value="200" unit="deg/s"/> <!--Does not seem to be applied-->
  </section>
  <section name="STABILIZATION_ATTITUDE" prefix="STABILIZATION_ATTITUDE_">
    <!-- setpoints -->
    <define name="SP_MAX_PHI" value="45" unit="deg"/>
    <define name="SP_MAX_THETA" value="45" unit="deg"/>
    <define name="SP_MAX_R" value="360" unit="deg/s"/>
    <define name="DEADBAND_A" value="0"/>
    <define name="DEADBAND_E" value="0"/>
    <define name="DEADBAND_R" value="50"/>

    <!-- reference -->
    <define name="REF_OMEGA_P" value="450" unit="deg/s"/>
    <define name="REF_ZETA_P" value="0.9"/>
    <define name="REF_MAX_P" value="600." unit="deg/s"/>
    <define name="REF_MAX_PDOT" value="RadOfDeg(8000.)"/>

    <define name="REF_OMEGA_Q" value="450" unit="deg/s"/>
    <define name="REF_ZETA_Q" value="0.9"/>
    <define name="REF_MAX_Q" value="600." unit="deg/s"/>
    <define name="REF_MAX_QDOT" value="RadOfDeg(8000.)"/>

    <define name="REF_OMEGA_R" value="200" unit="deg/s"/>
    <define name="REF_ZETA_R" value="0.9"/>
    <define name="REF_MAX_R" value="300." unit="deg/s"/>
    <define name="REF_MAX_RDOT" value="RadOfDeg(4000.)"/>

    <!-- feedback -->
    <define name="PHI_PGAIN" value="850"/>
    <define name="PHI_DGAIN" value="425"/>
    <define name="PHI_IGAIN" value="0"/>

    <define name="THETA_PGAIN" value="850"/>
    <define name="THETA_DGAIN" value="425"/>
    <define name="THETA_IGAIN" value="0"/>

    <define name="PSI_PGAIN" value="1300"/>
    <define name="PSI_DGAIN" value="800"/>
    <define name="PSI_IGAIN" value="10"/>

    <!-- feedforward -->
    <define name="PHI_DDGAIN" value="0"/>
    <define name="THETA_DDGAIN" value="0"/>
    <define name="PSI_DDGAIN" value="100"/>
  </section>
  <section name="GUIDANCE_V" prefix="GUIDANCE_V_">
    <define name="HOVER_KP" value="350" />
    <define name="HOVER_KD" value="85" />
    <define name="HOVER_KI" value="20" />
    <define name="NOMINAL_HOVER_THROTTLE" value="0.36" />
    <define name="ADAPT_THROTTLE_ENABLED" value="FALSE" />
  </section>
  <section name="GUIDANCE_H" prefix="GUIDANCE_H_">
    <!-- Good weather -->
    <define name="MAX_BANK" value="20" unit="deg" />
    <define name="REF_MAX_SPEED" value="2" unit="m/s" />
    <!-- Bad weather -->
    <!-- define name="MAX_BANK" value="32" unit="deg"/ -->
    <define name="PGAIN" value="50" />
    <define name="DGAIN" value="100" />
    <define name="IGAIN" value="30" />
  </section>
  <section name="NAVIGATION" prefix="NAV_">
    <define name="CLIMB_VSPEED" value="4.5" />
    <define name="DESCEND_VSPEED" value="-1.0" />
  </section>
  <section name="AUTOPILOT">
    <define name="MODE_STARTUP" value="AP_MODE_ATTITUDE_DIRECT" />
    <define name="MODE_MANUAL" value="AP_MODE_ATTITUDE_DIRECT" />
    <define name="MODE_AUTO1" value="AP_MODE_RATE_DIRECT" />
    <define name="MODE_AUTO2" value="AP_MODE_RATE_DIRECT" />
<!--    <define name="MODE_AUTO2" value="AP_MODE_RATE_DIRECT" />-->
    <define name="NO_RC_THRUST_LIMIT" value="TRUE" />
  </section>
  <section name="BAT">
    <define name="MILLIAMP_AT_FULL_THROTTLE" value="8700" />
    <define name="CATASTROPHIC_BAT_LEVEL" value="9.2" unit="V" />
    <define name="CRITIC_BAT_LEVEL" value="9.9" unit="V" />
    <define name="LOW_BAT_LEVEL" value="10.2" unit="V" />
    <define name="MAX_BAT_LEVEL" value="12.4" unit="V" />
  </section>
</airframe>
